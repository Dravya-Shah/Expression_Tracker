{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dravya\\\\Expression Tracker(Leela)\\\\Expression_Tracker\\\\client\\\\src\\\\components\\\\LoginPage\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./LoginPage.css\"; // Link the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:5000/login\", {\n        name: username,\n        password: password\n      });\n      const {\n        redirectUrl\n      } = response.data;\n      if (redirectUrl) {\n        // Save username in localStorage\n        localStorage.setItem(\"username\", username);\n        navigate(redirectUrl);\n      } else {\n        alert(\"Invalid login response.\");\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        alert(\"Invalid username or password\");\n      } else {\n        console.error(\"Error during login:\", error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outer-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"semicircle\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleLogin,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"username\",\n                name: \"username\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                placeholder: \"Enter your username\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"password-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: showPassword ? \"text\" : \"password\",\n                  id: \"password\",\n                  name: \"password\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value),\n                  placeholder: \"Enter your password\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"toggle-password-btn\",\n                  onClick: () => setShowPassword(!showPassword) // Correctly use the toggle logic\n                  ,\n                  children: showPassword ? \"ðŸ‘€\" : \"ðŸ˜Ž\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"9ON27aIueGJBH56kjJbSUZxE0fw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","showPassword","setShowPassword","navigate","handleLogin","e","preventDefault","response","post","name","redirectUrl","data","localStorage","setItem","alert","error","status","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dravya/Expression Tracker(Leela)/Expression_Tracker/client/src/components/LoginPage/LoginPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./LoginPage.css\"; // Link the CSS file\r\n\r\nfunction LoginPage() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/login\", {\r\n        name: username,\r\n        password: password,\r\n      });\r\n\r\n      const { redirectUrl } = response.data;\r\n      if (redirectUrl) {\r\n        // Save username in localStorage\r\n        localStorage.setItem(\"username\", username);\r\n        navigate(redirectUrl);\r\n      } else {\r\n        alert(\"Invalid login response.\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 401) {\r\n        alert(\"Invalid username or password\");\r\n      } else {\r\n        console.error(\"Error during login:\", error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"background-container\">\r\n    \r\n      {/* Semi-transparent overlay */}\r\n      <div className=\"overlay\"></div>\r\n      <div className=\"outer-container\">\r\n      {/* Semicircular container */}\r\n      <div className=\"semicircle\">\r\n        <div className=\"login-box\">\r\n          <h1>Login</h1>\r\n          <form onSubmit={handleLogin}>\r\n            {/* Username Input */}\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"username\"></label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                name=\"username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                placeholder=\"Enter your username\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            {/* Password Input */}\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"password\"></label>\r\n              <div className=\"password-container\">\r\n                <input\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  placeholder=\"Enter your password\"\r\n                  required\r\n                />\r\n                {/* Toggle Button */}\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"toggle-password-btn\"\r\n                  onClick={() => setShowPassword(!showPassword)} // Correctly use the toggle logic\r\n                >\r\n                  {showPassword ? \"ðŸ‘€\" : \"ðŸ˜Ž\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Submit Button */}\r\n            <button type=\"submit\">Login</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}