{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dravya\\\\Expression Tracker(Leela)\\\\Expression_Tracker\\\\client\\\\src\\\\components\\\\AdminApp\\\\AdminApp.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Pie } from 'react-chartjs-2';\n// import 'chart.js/auto';\n\n// function AdminApp() {\n//   const [sessions, setSessions] = useState([]);\n//   const [selectedSession, setSelectedSession] = useState(null);\n//   const [analysisData, setAnalysisData] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   useEffect(() => {\n//     fetchSessions();\n//   }, []);\n\n//   const fetchSessions = async () => {\n//     setIsLoading(true);\n//     try {\n//       const response = await fetch('http://localhost:5000/api/sessions');\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch sessions');\n//       }\n//       const data = await response.json();\n//       setSessions(data);\n//     } catch (error) {\n//       console.error('Error fetching sessions:', error);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const handleSessionClick = async (sessionId) => {\n//     setSelectedSession(sessionId);\n//     try {\n//       const response = await fetch(`http://localhost:5000/analyze/${sessionId}`);\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n//       const data = await response.json();\n//       setAnalysisData(data);\n//     } catch (error) {\n//       console.error('Error analyzing session:', error);\n//     }\n//   };\n\n//   const handleBackToSessions = () => {\n//     setSelectedSession(null);\n//     setAnalysisData(null);\n//   };\n\n//   const renderSessionList = () => (\n//     <div style={{ width: '100%' }}>\n//       <h3>Session List</h3>\n//       {isLoading ? (\n//         <p>Loading sessions...</p>\n//       ) : (\n//         <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n//           <thead>\n//             <tr style={{ backgroundColor: '#f4f4f4' }}>\n//               <th style={{ padding: '10px', border: '1px solid #ddd' }}>Username</th>\n//               <th style={{ padding: '10px', border: '1px solid #ddd' }}>Session ID</th>\n//               <th style={{ padding: '10px', border: '1px solid #ddd' }}>Date & Time</th>\n//               <th style={{ padding: '10px', border: '1px solid #ddd' }}>Action</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {sessions.map((user) => (\n//               <React.Fragment key={user.username}>\n//                 {user.sessions.map((session, index) => (\n//                   <tr key={session.sessionId}>\n//                     {index === 0 && (\n//                       <td\n//                         style={{ padding: '10px', border: '1px solid #ddd' }}\n//                         rowSpan={user.sessions.length}\n//                       >\n//                         {user.username}\n//                       </td>\n//                     )}\n//                     <td style={{ padding: '10px', border: '1px solid #ddd' }}>{session.sessionId}</td>\n//                     <td style={{ padding: '10px', border: '1px solid #ddd' }}>\n//                       {new Date(session.createdAt).toLocaleString()}\n//                     </td>\n//                     <td style={{ padding: '10px', border: '1px solid #ddd' }}>\n//                       <button\n//                         onClick={() => handleSessionClick(session.sessionId)}\n//                         style={{\n//                           backgroundColor: '#4CAF50',\n//                           color: 'white',\n//                           padding: '5px 10px',\n//                           border: 'none',\n//                           borderRadius: '3px',\n//                           cursor: 'pointer',\n//                         }}\n//                       >\n//                         Get Analysis\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </React.Fragment>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n\n//   const renderPieChart = () => {\n//     if (!analysisData || !analysisData.overallAnalysis) return null;\n\n//     const emotions = analysisData.overallAnalysis.emotions;\n//     const data = {\n//       labels: Object.keys(emotions),\n//       datasets: [{\n//         label: 'Emotion Analysis (%)',\n//         data: Object.values(emotions).map(v => parseFloat(v)),\n//         backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],\n//       }]\n//     };\n\n//     const options = {\n//       responsive: true,\n//       plugins: {\n//         legend: {\n//           position: 'top',\n//         },\n//       },\n//     };\n\n//     return (\n//       <div style={{ width: '60%', margin: '0 auto' }}>\n//         <h3 style={{ textAlign: 'center' }}>Overall Emotion Analysis</h3>\n//         <Pie data={data} options={options} />\n//       </div>\n//     );\n//   };\n\n//   const renderTable = () => {\n//     if (!analysisData || !analysisData.imageAnalyses) return null;\n\n//     return (\n//       <div style={{ overflowX: 'auto', marginTop: '20px' }}>\n//         <table style={{ width: '100%', borderCollapse: 'collapse', border: '1px solid #ddd' }}>\n//           <thead>\n//             <tr>\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Webcam Capture</th>\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Game Screenshot</th>\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Analysis</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {analysisData.imageAnalyses.map((analysis, index) => (\n//               <tr key={index} style={{ borderBottom: '1px solid #ddd' }}>\n//                 <td style={{ border: '1px solid #ddd', padding: '12px', textAlign: 'center' }}>\n//                   <img \n//                     src={`http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath}`} \n//                     srcSet={`http://localhost:5000/uploads/webcam_images/${selectedSession}/small/${analysis.imagePath} 200w,\n//                              http://localhost:5000/uploads/webcam_images/${selectedSession}/medium/${analysis.imagePath} 400w,\n//                              http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath} 800w`}\n//                     sizes=\"(max-width: 400px) 200px, (max-width: 800px) 400px, 800px\"\n//                     alt={`Webcam ${index}`} \n//                     style={{ width: '100%', height: 'auto', borderRadius: '5px' }}\n//                     loading=\"lazy\" \n//                   />\n//                 </td>\n\n//                 <td style={{ border: '1px solid #ddd', padding: '12px', textAlign: 'center' }}>\n//                   <img \n//                     src={`http://localhost:5000/uploads/screenshots/${selectedSession}/screenshot_${index}.png`} \n//                     srcSet={`http://localhost:5000/uploads/screenshots/${selectedSession}/small/screenshot_${index}.png 200w,\n//                              http://localhost:5000/uploads/screenshots/${selectedSession}/medium/screenshot_${index}.png 400w,\n//                              http://localhost:5000/uploads/screenshots/${selectedSession}/screenshot_${index}.png 800w`}\n//                     sizes=\"(max-width: 400px) 200px, (max-width: 800px) 400px, 800px\"\n//                     alt={`Game Screenshot ${index}`} \n//                     style={{ width: '100%', height: 'auto', borderRadius: '5px' }}\n//                     loading=\"lazy\" \n//                   />\n//                 </td>\n//                 <td style={{ border: '1px solid #ddd', padding: '12px' }}>\n//                   {Object.entries(analysis.emotions).map(([emotion, value]) => (\n//                     <p key={emotion} style={{ margin: '5px 0' }}>\n//                       {emotion}: {parseFloat(value).toFixed(2)}%\n//                     </p>\n//                   ))}\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div style={{ padding: '20px', maxHeight: '100vh', overflowY: 'auto' }}>\n//       <h2>Admin Dashboard</h2>\n\n//       {selectedSession ? (\n//         <div style={{ width: '100%' }}>\n//           <h3>Analysis for Session: {selectedSession}</h3>\n//           {renderPieChart()}\n//           {renderTable()}\n//           <button\n//             onClick={handleBackToSessions}\n//             style={{\n//               backgroundColor: '#A2C2E2',\n//               color: '#fff',\n//               padding: '10px 15px',\n//               border: 'none',\n//               borderRadius: '5px',\n//               cursor: 'pointer',\n//               marginTop: '20px',\n//               display: 'block',\n//               marginLeft: 'auto',\n//               marginRight: 'auto'\n//             }}\n//           >\n//             Back to Sessions\n//           </button>\n//         </div>\n//       ) : (\n//         renderSessionList()\n//       )}\n//     </div>\n//   );\n// }\n\n// export default AdminApp;\nimport React, { useState, useEffect } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\nimport \"./AdminApp.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminApp() {\n  _s();\n  const [sessions, setSessions] = useState([]);\n  const [selectedSession, setSelectedSession] = useState(null);\n  const [analysisData, setAnalysisData] = useState(null);\n  useEffect(() => {\n    fetchSessions();\n  }, []);\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/sessions\");\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n\n      // Process grouped sessions data into a flat array for rendering\n      const groupedSessions = data.map(group => ({\n        username: group.username,\n        sessions: group.sessions\n      }));\n      setSessions(groupedSessions);\n    } catch (error) {\n      console.error(\"Error fetching sessions:\", error);\n    }\n  };\n  const handleSessionClick = async sessionId => {\n    setSelectedSession(sessionId);\n    try {\n      const response = await fetch(`http://localhost:5000/analyze/${sessionId}`);\n      if (!response.ok) {\n        if (response.status === 404) {\n          setAnalysisData({\n            imageAnalyses: [],\n            overallAnalysis: {\n              emotions: {}\n            }\n          });\n        } else {\n          throw new Error(\"Network response was not ok\");\n        }\n      }\n      const data = await response.json();\n      setAnalysisData(data);\n    } catch (error) {\n      console.error(\"Error analyzing session:\", error);\n    }\n  };\n  const handleBackToSessions = () => {\n    setSelectedSession(null);\n    setAnalysisData(null);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return \"\";\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n  const renderTable = () => {\n    if (!analysisData || analysisData.imageAnalyses.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"analysis-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Webcam Capture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Game Screenshot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: analysisData.imageAnalyses.map((analysis, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath}`,\n                alt: `Webcam ${index}`,\n                className: \"webcam-image\",\n                loading: \"lazy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5000/uploads/screenshots/${selectedSession}/${analysis.imagePath}`,\n                alt: `Game Screenshot ${index}`,\n                className: \"screenshot-image\",\n                loading: \"lazy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"analysis-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Emotion Analysis:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), Object.entries(analysis.emotions).map(([emotion, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"emotion-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [emotion, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [parseFloat(value).toFixed(2), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 23\n                }, this)]\n              }, emotion, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dominant-emotion\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Dominant Emotion: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: analysis.dominantEmotion\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this);\n  };\n  const renderPieChart = () => {\n    if (!analysisData || !analysisData.overallAnalysis || Object.keys(analysisData.overallAnalysis.emotions).length === 0) return null;\n    const emotions = analysisData.overallAnalysis.emotions;\n    const emotionLabelsWithEmojis = {\n      happy: \"😊 Happy\",\n      sad: \"😢 Sad\",\n      angry: \"😠 Angry\",\n      surprised: \"😮 Surprised\",\n      fearful: \"😨 Fearful\",\n      neutral: \"😐 Neutral\",\n      disgust: \"🤢 Disgust\",\n      fear: \"😨 Fear\",\n      surprise: \"😯 Surprise\"\n    };\n    const data = {\n      labels: Object.keys(emotions).map(emotion => emotionLabelsWithEmojis[emotion] || emotion),\n      datasets: [{\n        data: Object.values(emotions).map(v => parseFloat(v)),\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\", \"#FF9F40\", \"#C9CBCF\"],\n        borderWidth: 1\n      }]\n    };\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"right\"\n        },\n        title: {\n          display: true\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pie-chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this);\n  };\n  const renderSessionsList = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sessions-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Local Sessions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sessions-list\",\n      children: sessions.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sessions.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"session-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: group.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: group.sessions.map(session => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleSessionClick(session.sessionId),\n              className: \"session-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: session.sessionId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 23\n              }, this), session.createdAt && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Created: \", formatDate(session.createdAt)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 25\n              }, this)]\n            }, session.sessionId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this)]\n        }, group.username, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 411,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Emotion Analysis Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: selectedSession ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [renderPieChart(), renderTable(), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToSessions,\n          className: \"back-to-sessions-btn\",\n          children: \"\\u2190 Back to Sessions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : renderSessionsList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminApp, \"8K1xWV7/NtmTldeCFxSL+RxVSYg=\");\n_c = AdminApp;\nexport default AdminApp;\nvar _c;\n$RefreshReg$(_c, \"AdminApp\");","map":{"version":3,"names":["React","useState","useEffect","Pie","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminApp","_s","sessions","setSessions","selectedSession","setSelectedSession","analysisData","setAnalysisData","fetchSessions","response","fetch","ok","Error","data","json","groupedSessions","map","group","username","error","console","handleSessionClick","sessionId","status","imageAnalyses","overallAnalysis","emotions","handleBackToSessions","formatDate","dateString","date","Date","toLocaleString","renderTable","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","analysis","index","src","imagePath","alt","loading","Object","entries","emotion","value","parseFloat","toFixed","dominantEmotion","renderPieChart","keys","emotionLabelsWithEmojis","happy","sad","angry","surprised","fearful","neutral","disgust","fear","surprise","labels","datasets","values","v","backgroundColor","borderWidth","options","responsive","plugins","legend","position","title","display","renderSessionsList","session","onClick","createdAt","_c","$RefreshReg$"],"sources":["C:/Users/Dravya/Expression Tracker(Leela)/Expression_Tracker/client/src/components/AdminApp/AdminApp.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Pie } from 'react-chartjs-2';\r\n// import 'chart.js/auto';\r\n\r\n// function AdminApp() {\r\n//   const [sessions, setSessions] = useState([]);\r\n//   const [selectedSession, setSelectedSession] = useState(null);\r\n//   const [analysisData, setAnalysisData] = useState(null);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     fetchSessions();\r\n//   }, []);\r\n\r\n//   const fetchSessions = async () => {\r\n//     setIsLoading(true);\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/sessions');\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to fetch sessions');\r\n//       }\r\n//       const data = await response.json();\r\n//       setSessions(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching sessions:', error);\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleSessionClick = async (sessionId) => {\r\n//     setSelectedSession(sessionId);\r\n//     try {\r\n//       const response = await fetch(`http://localhost:5000/analyze/${sessionId}`);\r\n//       if (!response.ok) {\r\n//         throw new Error('Network response was not ok');\r\n//       }\r\n//       const data = await response.json();\r\n//       setAnalysisData(data);\r\n//     } catch (error) {\r\n//       console.error('Error analyzing session:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleBackToSessions = () => {\r\n//     setSelectedSession(null);\r\n//     setAnalysisData(null);\r\n//   };\r\n\r\n//   const renderSessionList = () => (\r\n//     <div style={{ width: '100%' }}>\r\n//       <h3>Session List</h3>\r\n//       {isLoading ? (\r\n//         <p>Loading sessions...</p>\r\n//       ) : (\r\n//         <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n//           <thead>\r\n//             <tr style={{ backgroundColor: '#f4f4f4' }}>\r\n//               <th style={{ padding: '10px', border: '1px solid #ddd' }}>Username</th>\r\n//               <th style={{ padding: '10px', border: '1px solid #ddd' }}>Session ID</th>\r\n//               <th style={{ padding: '10px', border: '1px solid #ddd' }}>Date & Time</th>\r\n//               <th style={{ padding: '10px', border: '1px solid #ddd' }}>Action</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {sessions.map((user) => (\r\n//               <React.Fragment key={user.username}>\r\n//                 {user.sessions.map((session, index) => (\r\n//                   <tr key={session.sessionId}>\r\n//                     {index === 0 && (\r\n//                       <td\r\n//                         style={{ padding: '10px', border: '1px solid #ddd' }}\r\n//                         rowSpan={user.sessions.length}\r\n//                       >\r\n//                         {user.username}\r\n//                       </td>\r\n//                     )}\r\n//                     <td style={{ padding: '10px', border: '1px solid #ddd' }}>{session.sessionId}</td>\r\n//                     <td style={{ padding: '10px', border: '1px solid #ddd' }}>\r\n//                       {new Date(session.createdAt).toLocaleString()}\r\n//                     </td>\r\n//                     <td style={{ padding: '10px', border: '1px solid #ddd' }}>\r\n//                       <button\r\n//                         onClick={() => handleSessionClick(session.sessionId)}\r\n//                         style={{\r\n//                           backgroundColor: '#4CAF50',\r\n//                           color: 'white',\r\n//                           padding: '5px 10px',\r\n//                           border: 'none',\r\n//                           borderRadius: '3px',\r\n//                           cursor: 'pointer',\r\n//                         }}\r\n//                       >\r\n//                         Get Analysis\r\n//                       </button>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </React.Fragment>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       )}\r\n//     </div>\r\n//   );\r\n\r\n//   const renderPieChart = () => {\r\n//     if (!analysisData || !analysisData.overallAnalysis) return null;\r\n\r\n//     const emotions = analysisData.overallAnalysis.emotions;\r\n//     const data = {\r\n//       labels: Object.keys(emotions),\r\n//       datasets: [{\r\n//         label: 'Emotion Analysis (%)',\r\n//         data: Object.values(emotions).map(v => parseFloat(v)),\r\n//         backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],\r\n//       }]\r\n//     };\r\n\r\n//     const options = {\r\n//       responsive: true,\r\n//       plugins: {\r\n//         legend: {\r\n//           position: 'top',\r\n//         },\r\n//       },\r\n//     };\r\n\r\n//     return (\r\n//       <div style={{ width: '60%', margin: '0 auto' }}>\r\n//         <h3 style={{ textAlign: 'center' }}>Overall Emotion Analysis</h3>\r\n//         <Pie data={data} options={options} />\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   const renderTable = () => {\r\n//     if (!analysisData || !analysisData.imageAnalyses) return null;\r\n\r\n//     return (\r\n//       <div style={{ overflowX: 'auto', marginTop: '20px' }}>\r\n//         <table style={{ width: '100%', borderCollapse: 'collapse', border: '1px solid #ddd' }}>\r\n//           <thead>\r\n//             <tr>\r\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Webcam Capture</th>\r\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Game Screenshot</th>\r\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Analysis</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {analysisData.imageAnalyses.map((analysis, index) => (\r\n//               <tr key={index} style={{ borderBottom: '1px solid #ddd' }}>\r\n//                 <td style={{ border: '1px solid #ddd', padding: '12px', textAlign: 'center' }}>\r\n//                   <img \r\n//                     src={`http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath}`} \r\n//                     srcSet={`http://localhost:5000/uploads/webcam_images/${selectedSession}/small/${analysis.imagePath} 200w,\r\n//                              http://localhost:5000/uploads/webcam_images/${selectedSession}/medium/${analysis.imagePath} 400w,\r\n//                              http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath} 800w`}\r\n//                     sizes=\"(max-width: 400px) 200px, (max-width: 800px) 400px, 800px\"\r\n//                     alt={`Webcam ${index}`} \r\n//                     style={{ width: '100%', height: 'auto', borderRadius: '5px' }}\r\n//                     loading=\"lazy\" \r\n//                   />\r\n//                 </td>\r\n                \r\n//                 <td style={{ border: '1px solid #ddd', padding: '12px', textAlign: 'center' }}>\r\n//                   <img \r\n//                     src={`http://localhost:5000/uploads/screenshots/${selectedSession}/screenshot_${index}.png`} \r\n//                     srcSet={`http://localhost:5000/uploads/screenshots/${selectedSession}/small/screenshot_${index}.png 200w,\r\n//                              http://localhost:5000/uploads/screenshots/${selectedSession}/medium/screenshot_${index}.png 400w,\r\n//                              http://localhost:5000/uploads/screenshots/${selectedSession}/screenshot_${index}.png 800w`}\r\n//                     sizes=\"(max-width: 400px) 200px, (max-width: 800px) 400px, 800px\"\r\n//                     alt={`Game Screenshot ${index}`} \r\n//                     style={{ width: '100%', height: 'auto', borderRadius: '5px' }}\r\n//                     loading=\"lazy\" \r\n//                   />\r\n//                 </td>\r\n//                 <td style={{ border: '1px solid #ddd', padding: '12px' }}>\r\n//                   {Object.entries(analysis.emotions).map(([emotion, value]) => (\r\n//                     <p key={emotion} style={{ margin: '5px 0' }}>\r\n//                       {emotion}: {parseFloat(value).toFixed(2)}%\r\n//                     </p>\r\n//                   ))}\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: '20px', maxHeight: '100vh', overflowY: 'auto' }}>\r\n//       <h2>Admin Dashboard</h2>\r\n      \r\n//       {selectedSession ? (\r\n//         <div style={{ width: '100%' }}>\r\n//           <h3>Analysis for Session: {selectedSession}</h3>\r\n//           {renderPieChart()}\r\n//           {renderTable()}\r\n//           <button\r\n//             onClick={handleBackToSessions}\r\n//             style={{\r\n//               backgroundColor: '#A2C2E2',\r\n//               color: '#fff',\r\n//               padding: '10px 15px',\r\n//               border: 'none',\r\n//               borderRadius: '5px',\r\n//               cursor: 'pointer',\r\n//               marginTop: '20px',\r\n//               display: 'block',\r\n//               marginLeft: 'auto',\r\n//               marginRight: 'auto'\r\n//             }}\r\n//           >\r\n//             Back to Sessions\r\n//           </button>\r\n//         </div>\r\n//       ) : (\r\n//         renderSessionList()\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminApp;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\";\r\nimport \"./AdminApp.css\";\r\n\r\nfunction AdminApp() {\r\n  const [sessions, setSessions] = useState([]);\r\n  const [selectedSession, setSelectedSession] = useState(null);\r\n  const [analysisData, setAnalysisData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchSessions();\r\n  }, []);\r\n\r\n  const fetchSessions = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/sessions\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Network response was not ok\");\r\n      }\r\n      const data = await response.json();\r\n\r\n      // Process grouped sessions data into a flat array for rendering\r\n      const groupedSessions = data.map((group) => ({\r\n        username: group.username,\r\n        sessions: group.sessions,\r\n      }));\r\n\r\n      setSessions(groupedSessions);\r\n    } catch (error) {\r\n      console.error(\"Error fetching sessions:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSessionClick = async (sessionId) => {\r\n    setSelectedSession(sessionId);\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/analyze/${sessionId}`\r\n      );\r\n      if (!response.ok) {\r\n        if (response.status === 404) {\r\n          setAnalysisData({\r\n            imageAnalyses: [],\r\n            overallAnalysis: { emotions: {} },\r\n          });\r\n        } else {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n      }\r\n      const data = await response.json();\r\n      setAnalysisData(data);\r\n    } catch (error) {\r\n      console.error(\"Error analyzing session:\", error);\r\n    }\r\n  };\r\n\r\n  const handleBackToSessions = () => {\r\n    setSelectedSession(null);\r\n    setAnalysisData(null);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString();\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (!analysisData || analysisData.imageAnalyses.length === 0) return null;\r\n\r\n    return (\r\n      <div className=\"table-container\">\r\n        <table className=\"analysis-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Webcam Capture</th>\r\n              <th>Game Screenshot</th>\r\n              <th>Analysis</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {analysisData.imageAnalyses.map((analysis, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  <img\r\n                    src={`http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath}`}\r\n                    alt={`Webcam ${index}`}\r\n                    className=\"webcam-image\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    src={`http://localhost:5000/uploads/screenshots/${selectedSession}/${analysis.imagePath}`}\r\n                    alt={`Game Screenshot ${index}`}\r\n                    className=\"screenshot-image\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                </td>\r\n                <td className=\"analysis-data\">\r\n                  <h4>Emotion Analysis:</h4>\r\n                  {Object.entries(analysis.emotions).map(([emotion, value]) => (\r\n                    <div key={emotion} className=\"emotion-item\">\r\n                      <span>{emotion}:</span>\r\n                      <span>{parseFloat(value).toFixed(2)}%</span>\r\n                    </div>\r\n                  ))}\r\n                  <div className=\"dominant-emotion\">\r\n                    <strong>Dominant Emotion: </strong>\r\n                    <span>{analysis.dominantEmotion}</span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderPieChart = () => {\r\n    if (\r\n      !analysisData ||\r\n      !analysisData.overallAnalysis ||\r\n      Object.keys(analysisData.overallAnalysis.emotions).length === 0\r\n    )\r\n      return null;\r\n\r\n    const emotions = analysisData.overallAnalysis.emotions;\r\n    const emotionLabelsWithEmojis = {\r\n      happy: \"😊 Happy\",\r\n      sad: \"😢 Sad\",\r\n      angry: \"😠 Angry\",\r\n      surprised: \"😮 Surprised\",\r\n      fearful: \"😨 Fearful\",\r\n      neutral: \"😐 Neutral\",\r\n      disgust: \"🤢 Disgust\",\r\n      fear: \"😨 Fear\",\r\n      surprise: \"😯 Surprise\",\r\n    };\r\n\r\n    const data = {\r\n      labels: Object.keys(emotions).map(\r\n        (emotion) => emotionLabelsWithEmojis[emotion] || emotion\r\n      ),\r\n      datasets: [\r\n        {\r\n          data: Object.values(emotions).map((v) => parseFloat(v)),\r\n          backgroundColor: [\r\n            \"#FF6384\",\r\n            \"#36A2EB\",\r\n            \"#FFCE56\",\r\n            \"#4BC0C0\",\r\n            \"#9966FF\",\r\n            \"#FF9F40\",\r\n            \"#C9CBCF\",\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const options = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: \"right\",\r\n        },\r\n        title: {\r\n          display: true,\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div className=\"pie-chart-container\">\r\n        <Pie data={data} options={options} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderSessionsList = () => (\r\n    <div className=\"sessions-list-container\">\r\n      <h3>Local Sessions</h3>\r\n      <div className=\"sessions-list\">\r\n        {sessions.length > 0 ? (\r\n          <ul>\r\n            {sessions.map((group) => (\r\n              <li key={group.username} className=\"session-group\">\r\n                <h4>{group.username}</h4>\r\n                <ul>\r\n                  {group.sessions.map((session) => (\r\n                    <li\r\n                      key={session.sessionId}\r\n                      onClick={() => handleSessionClick(session.sessionId)}\r\n                      className=\"session-item\"\r\n                    >\r\n                      <div>{session.sessionId}</div>\r\n                      {session.createdAt && (\r\n                        <div>Created: {formatDate(session.createdAt)}</div>\r\n                      )}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"admin-app-container\">\r\n      <h2>Emotion Analysis Dashboard</h2>\r\n      <div className=\"content-container\">\r\n        {selectedSession ? (\r\n          <>\r\n            {renderPieChart()}\r\n            {renderTable()}\r\n            <button\r\n              onClick={handleBackToSessions}\r\n              className=\"back-to-sessions-btn\"\r\n            >\r\n              ← Back to Sessions\r\n            </button>\r\n          </>\r\n        ) : (\r\n          renderSessionsList()\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminApp;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,eAAe;AACtB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}