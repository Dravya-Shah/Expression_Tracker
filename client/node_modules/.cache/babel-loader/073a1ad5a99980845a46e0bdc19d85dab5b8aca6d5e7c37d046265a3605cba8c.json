{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dravya\\\\Expression Tracker(Leela)\\\\Expression_Tracker\\\\client\\\\src\\\\components\\\\LoginPage\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"./LoginPage.css\";\n\n// function LoginPage() {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleLogin = (e) => {\n//     e.preventDefault(); // Prevent form submission\n//     if (username.startsWith(\"kid\")) {\n//       navigate(\"/game\");\n//     } else if (username.startsWith(\"admin\")) {\n//       navigate(\"/admin\");\n//     } else {\n//       alert(\"Invalid username\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <div className=\"login-box\">\n//         <h1>Login</h1>\n//         <form onSubmit={handleLogin}>\n//           <div className=\"input-field\">\n//             <label htmlFor=\"username\">Username:</label>\n//             <input\n//               type=\"text\"\n//               id=\"username\"\n//               name=\"username\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//             />\n//           </div>\n//           <div className=\"input-field\">\n//             <label htmlFor=\"password\">Password:</label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               name=\"password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//             />\n//           </div>\n//           <button type=\"submit\">Login</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    //   try {\n    //     const response = await axios.post(\"http://localhost:5000/login\", {\n    //       name: username,\n    //       password:password,\n    //     });\n\n    //     const { redirectUrl } = response.data;\n    //     navigate(redirectUrl); \n    //   } catch (error) {\n    //     alert(\"Invalid username or password\");\n    //   }\n    // };\n    fetch(\"http://localhost:5000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: \"username\",\n        password: \"password\"\n      })\n    }).then(response => {\n      if (!response.ok) throw new Error(\"Login failed\");\n      return response.json();\n    }).then(data => {\n      if (data.redirectUrl) {\n        window.location.href = data.redirectUrl; // Redirect to the URL provided in the response\n        console.log(data.redirectUrl);\n      } else {\n        console.error(\"No redirect URL in response\");\n      }\n    }).catch(error => console.error(\"Error:\", error.message));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"JBV44+s3MGwvm5P+UO1Bab3M9dc=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","navigate","handleLogin","e","preventDefault","fetch","method","headers","body","JSON","stringify","name","then","response","ok","Error","json","data","redirectUrl","window","location","href","console","log","error","catch","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/Dravya/Expression Tracker(Leela)/Expression_Tracker/client/src/components/LoginPage/LoginPage.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"./LoginPage.css\";\r\n\r\n// function LoginPage() {\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = (e) => {\r\n//     e.preventDefault(); // Prevent form submission\r\n//     if (username.startsWith(\"kid\")) {\r\n//       navigate(\"/game\");\r\n//     } else if (username.startsWith(\"admin\")) {\r\n//       navigate(\"/admin\");\r\n//     } else {\r\n//       alert(\"Invalid username\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <div className=\"login-box\">\r\n//         <h1>Login</h1>\r\n//         <form onSubmit={handleLogin}>\r\n//           <div className=\"input-field\">\r\n//             <label htmlFor=\"username\">Username:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               id=\"username\"\r\n//               name=\"username\"\r\n//               value={username}\r\n//               onChange={(e) => setUsername(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div className=\"input-field\">\r\n//             <label htmlFor=\"password\">Password:</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               id=\"password\"\r\n//               name=\"password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\">Login</button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LoginPage;\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction LoginPage() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate(); \r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n  //   try {\r\n  //     const response = await axios.post(\"http://localhost:5000/login\", {\r\n  //       name: username,\r\n  //       password:password,\r\n  //     });\r\n      \r\n  //     const { redirectUrl } = response.data;\r\n  //     navigate(redirectUrl); \r\n  //   } catch (error) {\r\n  //     alert(\"Invalid username or password\");\r\n  //   }\r\n  // };\r\n  fetch(\"http://localhost:5000/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ name: \"username\", password: \"password\" })\r\n  })\r\n  .then(response => {\r\n    if (!response.ok) throw new Error(\"Login failed\");\r\n    return response.json();\r\n  })\r\n  .then(data => {\r\n    if (data.redirectUrl) {\r\n      window.location.href = data.redirectUrl; // Redirect to the URL provided in the response\r\n      console.log(data.redirectUrl)\r\n    } else {\r\n      console.error(\"No redirect URL in response\");\r\n    }\r\n  })\r\n  .catch(error => console.error(\"Error:\", error.message));\r\n}\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <form onSubmit={handleLogin}>\r\n        <label>Username:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <label>Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}