{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dravya\\\\Expression Tracker(Leela)\\\\Expression_Tracker\\\\client\\\\src\\\\components\\\\AdminApp\\\\AdminApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\nimport \"./AdminApp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminApp() {\n  _s();\n  const [sessions, setSessions] = useState([]);\n  const [selectedSession, setSelectedSession] = useState(null);\n  const [analysisData, setAnalysisData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [sessionDates, setSessionDates] = useState({});\n  useEffect(() => {\n    fetchSessions();\n  }, []);\n  const fetchSessions = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/sessions\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch sessions\");\n      }\n      const data = await response.json();\n      setSessions(data.sessions || []);\n      setSessionDates(data.sessionDates || {});\n    } catch (error) {\n      console.error(\"Error fetching sessions:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSessionClick = async sessionId => {\n    setSelectedSession(sessionId);\n    try {\n      const response = await fetch(`http://localhost:5000/analyze/${sessionId}`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setAnalysisData(data);\n    } catch (error) {\n      console.error(\"Error analyzing session:\", error);\n    }\n  };\n  const handleBackToSessions = () => {\n    setSelectedSession(null);\n    setAnalysisData(null);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return \"\";\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n  const renderSessionList = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sessions-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Session List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading sessions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"session-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Session ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date & Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sessions.map(user => user.sessions.map((session, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [index === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n            rowSpan: user.sessions.length,\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: session.sessionId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(session.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSessionClick(session.sessionId),\n              className: \"get-analysis-btn\",\n              children: \"Get Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this)]\n        }, session.sessionId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n  const renderPieChart = () => {\n    if (!(analysisData !== null && analysisData !== void 0 && analysisData.overallAnalysis)) return null;\n    const emotions = analysisData.overallAnalysis.emotions;\n    const emotionLabelsWithEmojis = {\n      happy: \"😊 Happy\",\n      sad: \"😢 Sad\",\n      angry: \"😠 Angry\",\n      surprised: \"😮 Surprised\",\n      fearful: \"😨 Fearful\",\n      neutral: \"😐 Neutral\",\n      disgust: \"🤢 Disgust\",\n      fear: \"😨 Fear\",\n      surprise: \"😯 Surprise\"\n    };\n    const labelsWithEmojis = Object.keys(emotions).map(emotion => emotionLabelsWithEmojis[emotion] || emotion);\n    const data = {\n      labels: labelsWithEmojis,\n      datasets: [{\n        label: \"Emotion Analysis (%)\",\n        data: Object.values(emotions).map(v => parseFloat(v)),\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\", \"#FF9F40\", \"#CFCFCF\", \"#D4A5A5\", \"#C8E6C9\"]\n      }]\n    };\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"top\",\n          labels: {\n            font: {\n              size: 14\n            }\n          }\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pie-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Overall Emotion Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  };\n  const renderTable = () => {\n    if (!(analysisData !== null && analysisData !== void 0 && analysisData.imageAnalyses)) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"analysis-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Webcam Capture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Game Screenshot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: analysisData.imageAnalyses.map((analysis, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath}`,\n                alt: `Webcam ${index}`,\n                className: \"webcam-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5000/uploads/game_screenshots/${selectedSession}/screenshot_${index}.png`,\n                alt: `Game Screenshot ${index}`,\n                className: \"screenshot-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Object.entries(analysis.emotions).map(([emotion, value]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [emotion, \": \", parseFloat(value).toFixed(2), \"%\"]\n              }, emotion, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), selectedSession ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Analysis for Session: \", selectedSession]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), renderPieChart(), renderTable(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBackToSessions,\n        className: \"back-to-sessions-btn\",\n        children: \"Back to Sessions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this) : renderSessionList()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminApp, \"c0OwRp5bfAhgkdPi7lFiwtBIr0c=\");\n_c = AdminApp;\nexport default AdminApp;\n\n// import React, { useState, useEffect } from 'react';\n// import { Pie } from 'react-chartjs-2'; // Changed Bar to Pie component\n// import 'chart.js/auto'; // Import auto to handle chart.js registration\n\n// function AdminApp() {\n//   const [sessions, setSessions] = useState([]);\n//   const [selectedSession, setSelectedSession] = useState(null);\n//   const [analysisData, setAnalysisData] = useState(null);\n\n//   useEffect(() => {\n//     fetchSessions();\n//   }, []);\n\n//   const fetchSessions = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/sessions');\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n//       const data = await response.json();\n//       setSessions(data.sessions);\n//     } catch (error) {\n//       console.error('Error fetching sessions:', error);\n//     }\n//   };\n\n//   const handleSessionClick = async (sessionId) => {\n//     setSelectedSession(sessionId);\n//     try {\n//       const response = await fetch(`http://localhost:5000/analyze/${sessionId}`);\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n//       const data = await response.json();\n//       setAnalysisData(data);\n//     } catch (error) {\n//       console.error('Error analyzing session:', error);\n//     }\n//   };\n\n//   const handleBackToSessions = () => {\n//     setSelectedSession(null);\n//     setAnalysisData(null);\n//   };\n\n//   const renderTable = () => {\n//     if (!analysisData || !analysisData.imageAnalyses) return null;\n\n//     return (\n//       <div style={{ overflowX: 'auto', marginTop: '20px' }}> {/* Enable horizontal scrolling */}\n//         <table style={{ width: '100%', borderCollapse: 'collapse', border: '1px solid #ddd' }}>\n//           <thead>\n//             <tr>\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Webcam Capture</th>\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Game Screenshot</th>\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Analysis</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {analysisData.imageAnalyses.map((analysis, index) => (\n//               <tr key={index} style={{ borderBottom: '1px solid #ddd' }}>\n//                 <td style={{ border: '1px solid #ddd', padding: '12px', textAlign: 'center' }}>\n//                   <img \n//                     src={`http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath}`} \n//                     srcSet={`http://localhost:5000/uploads/webcam_images/${selectedSession}/small/${analysis.imagePath} 200w,\n//                              http://localhost:5000/uploads/webcam_images/${selectedSession}/medium/${analysis.imagePath} 400w,\n//                              http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath} 800w`}\n//                     sizes=\"(max-width: 400px) 200px, (max-width: 800px) 400px, 800px\"\n//                     alt={`Webcam ${index}`} \n//                     style={{ width: '100%', height: 'auto', borderRadius: '5px' }}\n//                     loading=\"lazy\" \n//                   />\n//                 </td>\n\n//                 <td style={{ border: '1px solid #ddd', padding: '12px', textAlign: 'center' }}>\n//                   <img \n//                     src={`http://localhost:5000/uploads/game_screenshots/${selectedSession}/screenshot_${index}.png`} \n//                     srcSet={`http://localhost:5000/uploads/game_screenshots/${selectedSession}/small/screenshot_${index}.png 200w,\n//                              http://localhost:5000/uploads/game_screenshots/${selectedSession}/medium/screenshot_${index}.png 400w,\n//                              http://localhost:5000/uploads/game_screenshots/${selectedSession}/screenshot_${index}.png 800w`}\n//                     sizes=\"(max-width: 400px) 200px, (max-width: 800px) 400px, 800px\"\n//                     alt={`Game Screenshot ${index}`} \n//                     style={{ width: '100%', height: 'auto', borderRadius: '5px' }}\n//                     loading=\"lazy\" \n//                   />\n//                 </td>\n\n//                 <td style={{ border: '1px solid #ddd', padding: '12px' }}>\n//                   {Object.entries(analysis.emotions).map(([emotion, value]) => (\n//                     <p key={emotion} style={{ margin: '5px 0' }}>{emotion}: {parseFloat(value).toFixed(2)}%</p>\n//                   ))}\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     );\n//   };\n\n//   const renderPieChart = () => {\n//     if (!analysisData || !analysisData.overallAnalysis) return null;\n\n//     const emotions = analysisData.overallAnalysis.emotions;\n//     const data = {\n//       labels: Object.keys(emotions),\n//       datasets: [{\n//         label: 'Emotion Analysis (%)',\n//         data: Object.values(emotions).map(v => parseFloat(v)),\n//         backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],\n//       }]\n//     };\n\n//     const options = {\n//       responsive: true,\n//       plugins: {\n//         legend: {\n//           position: 'top',\n//         },\n//       },\n//     };\n\n//     return (\n//       <div style={{ width: '60%', margin: '0 auto' }}>\n//         <h3 style={{ textAlign: 'center' }}>Overall Emotion Analysis</h3>\n//         <Pie data={data} options={options} />\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div style={{ padding: '20px', maxHeight: '100vh', overflowY: 'auto' }}> {/* Added maxHeight and overflowY */}\n//       <h2>Admin Dashboard</h2>\n\n//       {/* Pie Chart for Overall Emotion Analysis */}\n//       {renderPieChart()}\n\n//       <div style={{ display: 'flex', marginTop: '40px' }}>\n//         {selectedSession ? (\n//           <div style={{ width: '100%' }}>\n//             <h3>Analysis for Session: {selectedSession}</h3>\n//             {renderTable()}\n\n//             {/* Back to Sessions Button */}\n//             <button \n//               onClick={handleBackToSessions} \n//               style={{\n//                 backgroundColor: '#A2C2E2', // Pastel blue color\n//                 color: '#fff',\n//                 padding: '10px 15px',\n//                 border: 'none',\n//                 borderRadius: '5px',\n//                 cursor: 'pointer',\n//                 marginTop: '20px',\n//                 display: 'block',\n//                 marginLeft: 'auto',\n//                 marginRight: 'auto'\n//               }}\n//             >\n//               Back to Sessions\n//             </button>\n//           </div>\n//         ) : (\n//           <div style={{ width: '30%', marginRight: '20px' }}>\n//             <h3>Sessions</h3>\n//             <ul style={{ listStyleType: 'none', padding: 0 }}>\n//               {sessions.map((session) => (\n//                 <li \n//                   key={session} \n//                   onClick={() => handleSessionClick(session)}\n//                   style={{ cursor: 'pointer', padding: '10px', border: '1px solid #ddd', marginBottom: '5px' }}\n//                 >\n//                   {session}\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default AdminApp;\nvar _c;\n$RefreshReg$(_c, \"AdminApp\");","map":{"version":3,"names":["React","useState","useEffect","Pie","jsxDEV","_jsxDEV","AdminApp","_s","sessions","setSessions","selectedSession","setSelectedSession","analysisData","setAnalysisData","isLoading","setIsLoading","sessionDates","setSessionDates","fetchSessions","response","fetch","ok","Error","data","json","error","console","handleSessionClick","sessionId","handleBackToSessions","formatDate","dateString","date","Date","toLocaleString","renderSessionList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","session","index","rowSpan","length","username","createdAt","onClick","renderPieChart","overallAnalysis","emotions","emotionLabelsWithEmojis","happy","sad","angry","surprised","fearful","neutral","disgust","fear","surprise","labelsWithEmojis","Object","keys","emotion","labels","datasets","label","values","v","parseFloat","backgroundColor","options","responsive","plugins","legend","position","font","size","renderTable","imageAnalyses","analysis","src","imagePath","alt","entries","value","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Dravya/Expression Tracker(Leela)/Expression_Tracker/client/src/components/AdminApp/AdminApp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\";\r\nimport \"./AdminApp.css\";\r\n\r\nfunction AdminApp() {\r\n  const [sessions, setSessions] = useState([]);\r\n  const [selectedSession, setSelectedSession] = useState(null);\r\n  const [analysisData, setAnalysisData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [sessionDates, setSessionDates] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchSessions();\r\n  }, []);\r\n\r\n  const fetchSessions = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/sessions\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch sessions\");\r\n      }\r\n      const data = await response.json();\r\n      setSessions(data.sessions || []);\r\n      setSessionDates(data.sessionDates || {});\r\n    } catch (error) {\r\n      console.error(\"Error fetching sessions:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSessionClick = async (sessionId) => {\r\n    setSelectedSession(sessionId);\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/analyze/${sessionId}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Network response was not ok\");\r\n      }\r\n      const data = await response.json();\r\n      setAnalysisData(data);\r\n    } catch (error) {\r\n      console.error(\"Error analyzing session:\", error);\r\n    }\r\n  };\r\n\r\n  const handleBackToSessions = () => {\r\n    setSelectedSession(null);\r\n    setAnalysisData(null);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString();\r\n  };\r\n\r\n  const renderSessionList = () => (\r\n    <div className=\"sessions-list-container\">\r\n      <h3>Session List</h3>\r\n      {isLoading ? (\r\n        <p>Loading sessions...</p>\r\n      ) : (\r\n        <table className=\"session-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Username</th>\r\n              <th>Session ID</th>\r\n              <th>Date & Time</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {sessions.map((user) =>\r\n              user.sessions.map((session, index) => (\r\n                <tr key={session.sessionId}>\r\n                  {index === 0 && (\r\n                    <td rowSpan={user.sessions.length}>{user.username}</td>\r\n                  )}\r\n                  <td>{session.sessionId}</td>\r\n                  <td>{formatDate(session.createdAt)}</td>\r\n                  <td>\r\n                    <button\r\n                      onClick={() => handleSessionClick(session.sessionId)}\r\n                      className=\"get-analysis-btn\"\r\n                    >\r\n                      Get Analysis\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const renderPieChart = () => {\r\n    if (!analysisData?.overallAnalysis) return null;\r\n\r\n    const emotions = analysisData.overallAnalysis.emotions;\r\n    const emotionLabelsWithEmojis = {\r\n      happy: \"😊 Happy\",\r\n      sad: \"😢 Sad\",\r\n      angry: \"😠 Angry\",\r\n      surprised: \"😮 Surprised\",\r\n      fearful: \"😨 Fearful\",\r\n      neutral: \"😐 Neutral\",\r\n      disgust: \"🤢 Disgust\",\r\n      fear: \"😨 Fear\",\r\n      surprise: \"😯 Surprise\",\r\n    };\r\n\r\n    const labelsWithEmojis = Object.keys(emotions).map(\r\n      (emotion) => emotionLabelsWithEmojis[emotion] || emotion\r\n    );\r\n\r\n    const data = {\r\n      labels: labelsWithEmojis,\r\n      datasets: [\r\n        {\r\n          label: \"Emotion Analysis (%)\",\r\n          data: Object.values(emotions).map((v) => parseFloat(v)),\r\n          backgroundColor: [\r\n            \"#FF6384\",\r\n            \"#36A2EB\",\r\n            \"#FFCE56\",\r\n            \"#4BC0C0\",\r\n            \"#9966FF\",\r\n            \"#FF9F40\",\r\n            \"#CFCFCF\",\r\n            \"#D4A5A5\",\r\n            \"#C8E6C9\",\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    const options = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: \"top\",\r\n          labels: {\r\n            font: {\r\n              size: 14,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div className=\"pie-chart-container\">\r\n        <h3>Overall Emotion Analysis</h3>\r\n        <Pie data={data} options={options} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (!analysisData?.imageAnalyses) return null;\r\n\r\n    return (\r\n      <div className=\"table-container\">\r\n        <table className=\"analysis-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Webcam Capture</th>\r\n              <th>Game Screenshot</th>\r\n              <th>Analysis</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {analysisData.imageAnalyses.map((analysis, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  <img\r\n                    src={`http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath}`}\r\n                    alt={`Webcam ${index}`}\r\n                    className=\"webcam-image\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    src={`http://localhost:5000/uploads/game_screenshots/${selectedSession}/screenshot_${index}.png`}\r\n                    alt={`Game Screenshot ${index}`}\r\n                    className=\"screenshot-image\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  {Object.entries(analysis.emotions).map(([emotion, value]) => (\r\n                    <p key={emotion}>\r\n                      {emotion}: {parseFloat(value).toFixed(2)}%\r\n                    </p>\r\n                  ))}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-app-container\">\r\n      <h2>Admin Dashboard</h2>\r\n      {selectedSession ? (\r\n        <div className=\"analysis-view\">\r\n          <h3>Analysis for Session: {selectedSession}</h3>\r\n          {renderPieChart()}\r\n          {renderTable()}\r\n          <button onClick={handleBackToSessions} className=\"back-to-sessions-btn\">\r\n            Back to Sessions\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        renderSessionList()\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminApp;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Pie } from 'react-chartjs-2'; // Changed Bar to Pie component\r\n// import 'chart.js/auto'; // Import auto to handle chart.js registration\r\n\r\n// function AdminApp() {\r\n//   const [sessions, setSessions] = useState([]);\r\n//   const [selectedSession, setSelectedSession] = useState(null);\r\n//   const [analysisData, setAnalysisData] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     fetchSessions();\r\n//   }, []);\r\n\r\n//   const fetchSessions = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/sessions');\r\n//       if (!response.ok) {\r\n//         throw new Error('Network response was not ok');\r\n//       }\r\n//       const data = await response.json();\r\n//       setSessions(data.sessions);\r\n//     } catch (error) {\r\n//       console.error('Error fetching sessions:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleSessionClick = async (sessionId) => {\r\n//     setSelectedSession(sessionId);\r\n//     try {\r\n//       const response = await fetch(`http://localhost:5000/analyze/${sessionId}`);\r\n//       if (!response.ok) {\r\n//         throw new Error('Network response was not ok');\r\n//       }\r\n//       const data = await response.json();\r\n//       setAnalysisData(data);\r\n//     } catch (error) {\r\n//       console.error('Error analyzing session:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleBackToSessions = () => {\r\n//     setSelectedSession(null);\r\n//     setAnalysisData(null);\r\n//   };\r\n\r\n//   const renderTable = () => {\r\n//     if (!analysisData || !analysisData.imageAnalyses) return null;\r\n\r\n//     return (\r\n//       <div style={{ overflowX: 'auto', marginTop: '20px' }}> {/* Enable horizontal scrolling */}\r\n//         <table style={{ width: '100%', borderCollapse: 'collapse', border: '1px solid #ddd' }}>\r\n//           <thead>\r\n//             <tr>\r\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Webcam Capture</th>\r\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Game Screenshot</th>\r\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Analysis</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {analysisData.imageAnalyses.map((analysis, index) => (\r\n//               <tr key={index} style={{ borderBottom: '1px solid #ddd' }}>\r\n//                 <td style={{ border: '1px solid #ddd', padding: '12px', textAlign: 'center' }}>\r\n//                   <img \r\n//                     src={`http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath}`} \r\n//                     srcSet={`http://localhost:5000/uploads/webcam_images/${selectedSession}/small/${analysis.imagePath} 200w,\r\n//                              http://localhost:5000/uploads/webcam_images/${selectedSession}/medium/${analysis.imagePath} 400w,\r\n//                              http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath} 800w`}\r\n//                     sizes=\"(max-width: 400px) 200px, (max-width: 800px) 400px, 800px\"\r\n//                     alt={`Webcam ${index}`} \r\n//                     style={{ width: '100%', height: 'auto', borderRadius: '5px' }}\r\n//                     loading=\"lazy\" \r\n//                   />\r\n//                 </td>\r\n                \r\n//                 <td style={{ border: '1px solid #ddd', padding: '12px', textAlign: 'center' }}>\r\n//                   <img \r\n//                     src={`http://localhost:5000/uploads/game_screenshots/${selectedSession}/screenshot_${index}.png`} \r\n//                     srcSet={`http://localhost:5000/uploads/game_screenshots/${selectedSession}/small/screenshot_${index}.png 200w,\r\n//                              http://localhost:5000/uploads/game_screenshots/${selectedSession}/medium/screenshot_${index}.png 400w,\r\n//                              http://localhost:5000/uploads/game_screenshots/${selectedSession}/screenshot_${index}.png 800w`}\r\n//                     sizes=\"(max-width: 400px) 200px, (max-width: 800px) 400px, 800px\"\r\n//                     alt={`Game Screenshot ${index}`} \r\n//                     style={{ width: '100%', height: 'auto', borderRadius: '5px' }}\r\n//                     loading=\"lazy\" \r\n//                   />\r\n//                 </td>\r\n\r\n//                 <td style={{ border: '1px solid #ddd', padding: '12px' }}>\r\n//                   {Object.entries(analysis.emotions).map(([emotion, value]) => (\r\n//                     <p key={emotion} style={{ margin: '5px 0' }}>{emotion}: {parseFloat(value).toFixed(2)}%</p>\r\n//                   ))}\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   const renderPieChart = () => {\r\n//     if (!analysisData || !analysisData.overallAnalysis) return null;\r\n\r\n//     const emotions = analysisData.overallAnalysis.emotions;\r\n//     const data = {\r\n//       labels: Object.keys(emotions),\r\n//       datasets: [{\r\n//         label: 'Emotion Analysis (%)',\r\n//         data: Object.values(emotions).map(v => parseFloat(v)),\r\n//         backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],\r\n//       }]\r\n//     };\r\n\r\n//     const options = {\r\n//       responsive: true,\r\n//       plugins: {\r\n//         legend: {\r\n//           position: 'top',\r\n//         },\r\n//       },\r\n//     };\r\n\r\n//     return (\r\n//       <div style={{ width: '60%', margin: '0 auto' }}>\r\n//         <h3 style={{ textAlign: 'center' }}>Overall Emotion Analysis</h3>\r\n//         <Pie data={data} options={options} />\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: '20px', maxHeight: '100vh', overflowY: 'auto' }}> {/* Added maxHeight and overflowY */}\r\n//       <h2>Admin Dashboard</h2>\r\n      \r\n//       {/* Pie Chart for Overall Emotion Analysis */}\r\n//       {renderPieChart()}\r\n\r\n//       <div style={{ display: 'flex', marginTop: '40px' }}>\r\n//         {selectedSession ? (\r\n//           <div style={{ width: '100%' }}>\r\n//             <h3>Analysis for Session: {selectedSession}</h3>\r\n//             {renderTable()}\r\n            \r\n//             {/* Back to Sessions Button */}\r\n//             <button \r\n//               onClick={handleBackToSessions} \r\n//               style={{\r\n//                 backgroundColor: '#A2C2E2', // Pastel blue color\r\n//                 color: '#fff',\r\n//                 padding: '10px 15px',\r\n//                 border: 'none',\r\n//                 borderRadius: '5px',\r\n//                 cursor: 'pointer',\r\n//                 marginTop: '20px',\r\n//                 display: 'block',\r\n//                 marginLeft: 'auto',\r\n//                 marginRight: 'auto'\r\n//               }}\r\n//             >\r\n//               Back to Sessions\r\n//             </button>\r\n//           </div>\r\n//         ) : (\r\n//           <div style={{ width: '30%', marginRight: '20px' }}>\r\n//             <h3>Sessions</h3>\r\n//             <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n//               {sessions.map((session) => (\r\n//                 <li \r\n//                   key={session} \r\n//                   onClick={() => handleSessionClick(session)}\r\n//                   style={{ cursor: 'pointer', padding: '10px', border: '1px solid #ddd', marginBottom: '5px' }}\r\n//                 >\r\n//                   {session}\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}