{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dravya\\\\Expression Tracker(Leela)\\\\Expression_Tracker\\\\client\\\\src\\\\components\\\\AdminApp\\\\AdminApp.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Pie } from 'react-chartjs-2';\n// import 'chart.js/auto';\n\n// function AdminApp() {\n//   const [sessions, setSessions] = useState([]);\n//   const [selectedSession, setSelectedSession] = useState(null);\n//   const [analysisData, setAnalysisData] = useState(null);\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   useEffect(() => {\n//     fetchSessions();\n//   }, []);\n\n//   const fetchSessions = async () => {\n//     setIsLoading(true);\n//     try {\n//       const response = await fetch('http://localhost:5000/api/sessions');\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch sessions');\n//       }\n//       const data = await response.json();\n//       setSessions(data);\n//     } catch (error) {\n//       console.error('Error fetching sessions:', error);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const handleSessionClick = async (sessionId) => {\n//     setSelectedSession(sessionId);\n//     try {\n//       const response = await fetch(`http://localhost:5000/analyze/${sessionId}`);\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n//       const data = await response.json();\n//       setAnalysisData(data);\n//     } catch (error) {\n//       console.error('Error analyzing session:', error);\n//     }\n//   };\n\n//   const handleBackToSessions = () => {\n//     setSelectedSession(null);\n//     setAnalysisData(null);\n//   };\n\n//   const renderSessionList = () => (\n//     <div style={{ width: '100%' }}>\n//       <h3>Session List</h3>\n//       {isLoading ? (\n//         <p>Loading sessions...</p>\n//       ) : (\n//         <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n//           <thead>\n//             <tr style={{ backgroundColor: '#f4f4f4' }}>\n//               <th style={{ padding: '10px', border: '1px solid #ddd' }}>Username</th>\n//               <th style={{ padding: '10px', border: '1px solid #ddd' }}>Session ID</th>\n//               <th style={{ padding: '10px', border: '1px solid #ddd' }}>Date & Time</th>\n//               <th style={{ padding: '10px', border: '1px solid #ddd' }}>Action</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {sessions.map((user) => (\n//               <React.Fragment key={user.username}>\n//                 {user.sessions.map((session, index) => (\n//                   <tr key={session.sessionId}>\n//                     {index === 0 && (\n//                       <td\n//                         style={{ padding: '10px', border: '1px solid #ddd' }}\n//                         rowSpan={user.sessions.length}\n//                       >\n//                         {user.username}\n//                       </td>\n//                     )}\n//                     <td style={{ padding: '10px', border: '1px solid #ddd' }}>{session.sessionId}</td>\n//                     <td style={{ padding: '10px', border: '1px solid #ddd' }}>\n//                       {new Date(session.createdAt).toLocaleString()}\n//                     </td>\n//                     <td style={{ padding: '10px', border: '1px solid #ddd' }}>\n//                       <button\n//                         onClick={() => handleSessionClick(session.sessionId)}\n//                         style={{\n//                           backgroundColor: '#4CAF50',\n//                           color: 'white',\n//                           padding: '5px 10px',\n//                           border: 'none',\n//                           borderRadius: '3px',\n//                           cursor: 'pointer',\n//                         }}\n//                       >\n//                         Get Analysis\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </React.Fragment>\n//             ))}\n//           </tbody>\n//         </table>\n//       )}\n//     </div>\n//   );\n\n//   const renderPieChart = () => {\n//     if (!analysisData || !analysisData.overallAnalysis) return null;\n\n//     const emotions = analysisData.overallAnalysis.emotions;\n//     const data = {\n//       labels: Object.keys(emotions),\n//       datasets: [{\n//         label: 'Emotion Analysis (%)',\n//         data: Object.values(emotions).map(v => parseFloat(v)),\n//         backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],\n//       }]\n//     };\n\n//     const options = {\n//       responsive: true,\n//       plugins: {\n//         legend: {\n//           position: 'top',\n//         },\n//       },\n//     };\n\n//     return (\n//       <div style={{ width: '60%', margin: '0 auto' }}>\n//         <h3 style={{ textAlign: 'center' }}>Overall Emotion Analysis</h3>\n//         <Pie data={data} options={options} />\n//       </div>\n//     );\n//   };\n\n//   const renderTable = () => {\n//     if (!analysisData || !analysisData.imageAnalyses) return null;\n\n//     return (\n//       <div style={{ overflowX: 'auto', marginTop: '20px' }}>\n//         <table style={{ width: '100%', borderCollapse: 'collapse', border: '1px solid #ddd' }}>\n//           <thead>\n//             <tr>\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Webcam Capture</th>\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Game Screenshot</th>\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Analysis</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {analysisData.imageAnalyses.map((analysis, index) => (\n//               <tr key={index} style={{ borderBottom: '1px solid #ddd' }}>\n//                 <td style={{ border: '1px solid #ddd', padding: '12px', textAlign: 'center' }}>\n//                   <img \n//                     src={`http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath}`} \n//                     srcSet={`http://localhost:5000/uploads/webcam_images/${selectedSession}/small/${analysis.imagePath} 200w,\n//                              http://localhost:5000/uploads/webcam_images/${selectedSession}/medium/${analysis.imagePath} 400w,\n//                              http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath} 800w`}\n//                     sizes=\"(max-width: 400px) 200px, (max-width: 800px) 400px, 800px\"\n//                     alt={`Webcam ${index}`} \n//                     style={{ width: '100%', height: 'auto', borderRadius: '5px' }}\n//                     loading=\"lazy\" \n//                   />\n//                 </td>\n\n//                 <td style={{ border: '1px solid #ddd', padding: '12px', textAlign: 'center' }}>\n//                   <img \n//                     src={`http://localhost:5000/uploads/screenshots/${selectedSession}/screenshot_${index}.png`} \n//                     srcSet={`http://localhost:5000/uploads/screenshots/${selectedSession}/small/screenshot_${index}.png 200w,\n//                              http://localhost:5000/uploads/screenshots/${selectedSession}/medium/screenshot_${index}.png 400w,\n//                              http://localhost:5000/uploads/screenshots/${selectedSession}/screenshot_${index}.png 800w`}\n//                     sizes=\"(max-width: 400px) 200px, (max-width: 800px) 400px, 800px\"\n//                     alt={`Game Screenshot ${index}`} \n//                     style={{ width: '100%', height: 'auto', borderRadius: '5px' }}\n//                     loading=\"lazy\" \n//                   />\n//                 </td>\n//                 <td style={{ border: '1px solid #ddd', padding: '12px' }}>\n//                   {Object.entries(analysis.emotions).map(([emotion, value]) => (\n//                     <p key={emotion} style={{ margin: '5px 0' }}>\n//                       {emotion}: {parseFloat(value).toFixed(2)}%\n//                     </p>\n//                   ))}\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     );\n//   };\n\n//   return (\n//     <div style={{ padding: '20px', maxHeight: '100vh', overflowY: 'auto' }}>\n//       <h2>Admin Dashboard</h2>\n\n//       {selectedSession ? (\n//         <div style={{ width: '100%' }}>\n//           <h3>Analysis for Session: {selectedSession}</h3>\n//           {renderPieChart()}\n//           {renderTable()}\n//           <button\n//             onClick={handleBackToSessions}\n//             style={{\n//               backgroundColor: '#A2C2E2',\n//               color: '#fff',\n//               padding: '10px 15px',\n//               border: 'none',\n//               borderRadius: '5px',\n//               cursor: 'pointer',\n//               marginTop: '20px',\n//               display: 'block',\n//               marginLeft: 'auto',\n//               marginRight: 'auto'\n//             }}\n//           >\n//             Back to Sessions\n//           </button>\n//         </div>\n//       ) : (\n//         renderSessionList()\n//       )}\n//     </div>\n//   );\n// }\n\n// export default AdminApp;\nimport React, { useState, useEffect } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\nimport \"./AdminApp.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminApp() {\n  _s();\n  const [sessions, setSessions] = useState([]);\n  const [selectedSession, setSelectedSession] = useState(null);\n  const [analysisData, setAnalysisData] = useState(null);\n  useEffect(() => {\n    fetchSessions();\n  }, []);\n  const fetchSessions = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/sessions\");\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n\n      // Group sessions data by user\n      const groupedSessions = data.map(group => ({\n        username: group.username,\n        sessions: group.sessions\n      }));\n      setSessions(groupedSessions);\n    } catch (error) {\n      console.error(\"Error fetching sessions:\", error);\n    }\n  };\n  const handleSessionClick = async sessionId => {\n    setSelectedSession(sessionId);\n    try {\n      const response = await fetch(`http://localhost:5000/analyze/${sessionId}`);\n      if (!response.ok) {\n        if (response.status === 404) {\n          setAnalysisData({\n            imageAnalyses: [],\n            overallAnalysis: {\n              emotions: {}\n            }\n          });\n        } else {\n          throw new Error(\"Network response was not ok\");\n        }\n      }\n      const data = await response.json();\n      setAnalysisData(data);\n    } catch (error) {\n      console.error(\"Error analyzing session:\", error);\n    }\n  };\n  const handleBackToSessions = () => {\n    setSelectedSession(null);\n    setAnalysisData(null);\n  };\n  const formatDate = dateString => {\n    if (!dateString) return \"\";\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n  const renderSessionsTable = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sessions-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Sessions Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"sessions-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Session ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sessions.map(group => group.sessions.map((session, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [index === 0 && /*#__PURE__*/_jsxDEV(\"td\", {\n            rowSpan: group.sessions.length,\n            children: group.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: session.sessionId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(session.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSessionClick(session.sessionId),\n              className: \"action-btn\",\n              children: \"Analyze\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this)]\n        }, session.sessionId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n  const renderPieChart = () => {\n    if (!analysisData || !analysisData.overallAnalysis || Object.keys(analysisData.overallAnalysis.emotions).length === 0) return null;\n    const emotions = analysisData.overallAnalysis.emotions;\n    const emotionLabelsWithEmojis = {\n      happy: \"😊 Happy\",\n      sad: \"😢 Sad\",\n      angry: \"😠 Angry\",\n      surprised: \"😮 Surprised\",\n      fearful: \"😨 Fearful\",\n      neutral: \"😐 Neutral\"\n    };\n    const data = {\n      labels: Object.keys(emotions).map(emotion => emotionLabelsWithEmojis[emotion] || emotion),\n      datasets: [{\n        data: Object.values(emotions).map(v => parseFloat(v)),\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\", \"#FF9F40\"]\n      }]\n    };\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"top\"\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this);\n  };\n  const renderAnalysisTable = () => {\n    if (!analysisData || analysisData.imageAnalyses.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"analysis-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Webcam Capture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Game Screenshot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: analysisData.imageAnalyses.map((analysis, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath}`,\n                alt: `Webcam ${index}`,\n                className: \"image-preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5000/uploads/screenshots/${selectedSession}/${analysis.imagePath}`,\n                alt: `Screenshot ${index}`,\n                className: \"image-preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Object.entries(analysis.emotions).map(([emotion, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [emotion, \": \", parseFloat(value).toFixed(2), \"%\"]\n              }, emotion, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this), selectedSession ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderPieChart(), renderAnalysisTable(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBackToSessions,\n        className: \"back-btn\",\n        children: \"Back to Sessions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : renderSessionsTable()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 432,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminApp, \"8K1xWV7/NtmTldeCFxSL+RxVSYg=\");\n_c = AdminApp;\nexport default AdminApp;\nvar _c;\n$RefreshReg$(_c, \"AdminApp\");","map":{"version":3,"names":["React","useState","useEffect","Pie","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminApp","_s","sessions","setSessions","selectedSession","setSelectedSession","analysisData","setAnalysisData","fetchSessions","response","fetch","ok","Error","data","json","groupedSessions","map","group","username","error","console","handleSessionClick","sessionId","status","imageAnalyses","overallAnalysis","emotions","handleBackToSessions","formatDate","dateString","date","Date","toLocaleString","renderSessionsTable","className","children","fileName","_jsxFileName","lineNumber","columnNumber","session","index","rowSpan","length","createdAt","onClick","renderPieChart","Object","keys","emotionLabelsWithEmojis","happy","sad","angry","surprised","fearful","neutral","labels","emotion","datasets","values","v","parseFloat","backgroundColor","options","responsive","plugins","legend","position","renderAnalysisTable","analysis","src","imagePath","alt","entries","value","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Dravya/Expression Tracker(Leela)/Expression_Tracker/client/src/components/AdminApp/AdminApp.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Pie } from 'react-chartjs-2';\r\n// import 'chart.js/auto';\r\n\r\n// function AdminApp() {\r\n//   const [sessions, setSessions] = useState([]);\r\n//   const [selectedSession, setSelectedSession] = useState(null);\r\n//   const [analysisData, setAnalysisData] = useState(null);\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     fetchSessions();\r\n//   }, []);\r\n\r\n//   const fetchSessions = async () => {\r\n//     setIsLoading(true);\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/sessions');\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to fetch sessions');\r\n//       }\r\n//       const data = await response.json();\r\n//       setSessions(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching sessions:', error);\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleSessionClick = async (sessionId) => {\r\n//     setSelectedSession(sessionId);\r\n//     try {\r\n//       const response = await fetch(`http://localhost:5000/analyze/${sessionId}`);\r\n//       if (!response.ok) {\r\n//         throw new Error('Network response was not ok');\r\n//       }\r\n//       const data = await response.json();\r\n//       setAnalysisData(data);\r\n//     } catch (error) {\r\n//       console.error('Error analyzing session:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleBackToSessions = () => {\r\n//     setSelectedSession(null);\r\n//     setAnalysisData(null);\r\n//   };\r\n\r\n//   const renderSessionList = () => (\r\n//     <div style={{ width: '100%' }}>\r\n//       <h3>Session List</h3>\r\n//       {isLoading ? (\r\n//         <p>Loading sessions...</p>\r\n//       ) : (\r\n//         <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n//           <thead>\r\n//             <tr style={{ backgroundColor: '#f4f4f4' }}>\r\n//               <th style={{ padding: '10px', border: '1px solid #ddd' }}>Username</th>\r\n//               <th style={{ padding: '10px', border: '1px solid #ddd' }}>Session ID</th>\r\n//               <th style={{ padding: '10px', border: '1px solid #ddd' }}>Date & Time</th>\r\n//               <th style={{ padding: '10px', border: '1px solid #ddd' }}>Action</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {sessions.map((user) => (\r\n//               <React.Fragment key={user.username}>\r\n//                 {user.sessions.map((session, index) => (\r\n//                   <tr key={session.sessionId}>\r\n//                     {index === 0 && (\r\n//                       <td\r\n//                         style={{ padding: '10px', border: '1px solid #ddd' }}\r\n//                         rowSpan={user.sessions.length}\r\n//                       >\r\n//                         {user.username}\r\n//                       </td>\r\n//                     )}\r\n//                     <td style={{ padding: '10px', border: '1px solid #ddd' }}>{session.sessionId}</td>\r\n//                     <td style={{ padding: '10px', border: '1px solid #ddd' }}>\r\n//                       {new Date(session.createdAt).toLocaleString()}\r\n//                     </td>\r\n//                     <td style={{ padding: '10px', border: '1px solid #ddd' }}>\r\n//                       <button\r\n//                         onClick={() => handleSessionClick(session.sessionId)}\r\n//                         style={{\r\n//                           backgroundColor: '#4CAF50',\r\n//                           color: 'white',\r\n//                           padding: '5px 10px',\r\n//                           border: 'none',\r\n//                           borderRadius: '3px',\r\n//                           cursor: 'pointer',\r\n//                         }}\r\n//                       >\r\n//                         Get Analysis\r\n//                       </button>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </React.Fragment>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       )}\r\n//     </div>\r\n//   );\r\n\r\n//   const renderPieChart = () => {\r\n//     if (!analysisData || !analysisData.overallAnalysis) return null;\r\n\r\n//     const emotions = analysisData.overallAnalysis.emotions;\r\n//     const data = {\r\n//       labels: Object.keys(emotions),\r\n//       datasets: [{\r\n//         label: 'Emotion Analysis (%)',\r\n//         data: Object.values(emotions).map(v => parseFloat(v)),\r\n//         backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],\r\n//       }]\r\n//     };\r\n\r\n//     const options = {\r\n//       responsive: true,\r\n//       plugins: {\r\n//         legend: {\r\n//           position: 'top',\r\n//         },\r\n//       },\r\n//     };\r\n\r\n//     return (\r\n//       <div style={{ width: '60%', margin: '0 auto' }}>\r\n//         <h3 style={{ textAlign: 'center' }}>Overall Emotion Analysis</h3>\r\n//         <Pie data={data} options={options} />\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   const renderTable = () => {\r\n//     if (!analysisData || !analysisData.imageAnalyses) return null;\r\n\r\n//     return (\r\n//       <div style={{ overflowX: 'auto', marginTop: '20px' }}>\r\n//         <table style={{ width: '100%', borderCollapse: 'collapse', border: '1px solid #ddd' }}>\r\n//           <thead>\r\n//             <tr>\r\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Webcam Capture</th>\r\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Game Screenshot</th>\r\n//               <th style={{ border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'center' }}>Analysis</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {analysisData.imageAnalyses.map((analysis, index) => (\r\n//               <tr key={index} style={{ borderBottom: '1px solid #ddd' }}>\r\n//                 <td style={{ border: '1px solid #ddd', padding: '12px', textAlign: 'center' }}>\r\n//                   <img \r\n//                     src={`http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath}`} \r\n//                     srcSet={`http://localhost:5000/uploads/webcam_images/${selectedSession}/small/${analysis.imagePath} 200w,\r\n//                              http://localhost:5000/uploads/webcam_images/${selectedSession}/medium/${analysis.imagePath} 400w,\r\n//                              http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath} 800w`}\r\n//                     sizes=\"(max-width: 400px) 200px, (max-width: 800px) 400px, 800px\"\r\n//                     alt={`Webcam ${index}`} \r\n//                     style={{ width: '100%', height: 'auto', borderRadius: '5px' }}\r\n//                     loading=\"lazy\" \r\n//                   />\r\n//                 </td>\r\n                \r\n//                 <td style={{ border: '1px solid #ddd', padding: '12px', textAlign: 'center' }}>\r\n//                   <img \r\n//                     src={`http://localhost:5000/uploads/screenshots/${selectedSession}/screenshot_${index}.png`} \r\n//                     srcSet={`http://localhost:5000/uploads/screenshots/${selectedSession}/small/screenshot_${index}.png 200w,\r\n//                              http://localhost:5000/uploads/screenshots/${selectedSession}/medium/screenshot_${index}.png 400w,\r\n//                              http://localhost:5000/uploads/screenshots/${selectedSession}/screenshot_${index}.png 800w`}\r\n//                     sizes=\"(max-width: 400px) 200px, (max-width: 800px) 400px, 800px\"\r\n//                     alt={`Game Screenshot ${index}`} \r\n//                     style={{ width: '100%', height: 'auto', borderRadius: '5px' }}\r\n//                     loading=\"lazy\" \r\n//                   />\r\n//                 </td>\r\n//                 <td style={{ border: '1px solid #ddd', padding: '12px' }}>\r\n//                   {Object.entries(analysis.emotions).map(([emotion, value]) => (\r\n//                     <p key={emotion} style={{ margin: '5px 0' }}>\r\n//                       {emotion}: {parseFloat(value).toFixed(2)}%\r\n//                     </p>\r\n//                   ))}\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: '20px', maxHeight: '100vh', overflowY: 'auto' }}>\r\n//       <h2>Admin Dashboard</h2>\r\n      \r\n//       {selectedSession ? (\r\n//         <div style={{ width: '100%' }}>\r\n//           <h3>Analysis for Session: {selectedSession}</h3>\r\n//           {renderPieChart()}\r\n//           {renderTable()}\r\n//           <button\r\n//             onClick={handleBackToSessions}\r\n//             style={{\r\n//               backgroundColor: '#A2C2E2',\r\n//               color: '#fff',\r\n//               padding: '10px 15px',\r\n//               border: 'none',\r\n//               borderRadius: '5px',\r\n//               cursor: 'pointer',\r\n//               marginTop: '20px',\r\n//               display: 'block',\r\n//               marginLeft: 'auto',\r\n//               marginRight: 'auto'\r\n//             }}\r\n//           >\r\n//             Back to Sessions\r\n//           </button>\r\n//         </div>\r\n//       ) : (\r\n//         renderSessionList()\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminApp;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\";\r\nimport \"./AdminApp.css\";\r\n\r\nfunction AdminApp() {\r\n  const [sessions, setSessions] = useState([]);\r\n  const [selectedSession, setSelectedSession] = useState(null);\r\n  const [analysisData, setAnalysisData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchSessions();\r\n  }, []);\r\n\r\n  const fetchSessions = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/sessions\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Network response was not ok\");\r\n      }\r\n      const data = await response.json();\r\n\r\n      // Group sessions data by user\r\n      const groupedSessions = data.map((group) => ({\r\n        username: group.username,\r\n        sessions: group.sessions,\r\n      }));\r\n\r\n      setSessions(groupedSessions);\r\n    } catch (error) {\r\n      console.error(\"Error fetching sessions:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSessionClick = async (sessionId) => {\r\n    setSelectedSession(sessionId);\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/analyze/${sessionId}`\r\n      );\r\n      if (!response.ok) {\r\n        if (response.status === 404) {\r\n          setAnalysisData({\r\n            imageAnalyses: [],\r\n            overallAnalysis: { emotions: {} },\r\n          });\r\n        } else {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n      }\r\n      const data = await response.json();\r\n      setAnalysisData(data);\r\n    } catch (error) {\r\n      console.error(\"Error analyzing session:\", error);\r\n    }\r\n  };\r\n\r\n  const handleBackToSessions = () => {\r\n    setSelectedSession(null);\r\n    setAnalysisData(null);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString();\r\n  };\r\n\r\n  const renderSessionsTable = () => (\r\n    <div className=\"sessions-table-container\">\r\n      <h3>Sessions Dashboard</h3>\r\n      <table className=\"sessions-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Username</th>\r\n            <th>Session ID</th>\r\n            <th>Created At</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sessions.map((group) =>\r\n            group.sessions.map((session, index) => (\r\n              <tr key={session.sessionId}>\r\n                {index === 0 && (\r\n                  <td rowSpan={group.sessions.length}>{group.username}</td>\r\n                )}\r\n                <td>{session.sessionId}</td>\r\n                <td>{formatDate(session.createdAt)}</td>\r\n                <td>\r\n                  <button\r\n                    onClick={() => handleSessionClick(session.sessionId)}\r\n                    className=\"action-btn\"\r\n                  >\r\n                    Analyze\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n\r\n  const renderPieChart = () => {\r\n    if (\r\n      !analysisData ||\r\n      !analysisData.overallAnalysis ||\r\n      Object.keys(analysisData.overallAnalysis.emotions).length === 0\r\n    )\r\n      return null;\r\n\r\n    const emotions = analysisData.overallAnalysis.emotions;\r\n    const emotionLabelsWithEmojis = {\r\n      happy: \"😊 Happy\",\r\n      sad: \"😢 Sad\",\r\n      angry: \"😠 Angry\",\r\n      surprised: \"😮 Surprised\",\r\n      fearful: \"😨 Fearful\",\r\n      neutral: \"😐 Neutral\",\r\n    };\r\n\r\n    const data = {\r\n      labels: Object.keys(emotions).map(\r\n        (emotion) => emotionLabelsWithEmojis[emotion] || emotion\r\n      ),\r\n      datasets: [\r\n        {\r\n          data: Object.values(emotions).map((v) => parseFloat(v)),\r\n          backgroundColor: [\r\n            \"#FF6384\",\r\n            \"#36A2EB\",\r\n            \"#FFCE56\",\r\n            \"#4BC0C0\",\r\n            \"#9966FF\",\r\n            \"#FF9F40\",\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    const options = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: \"top\",\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div className=\"chart-container\">\r\n        <Pie data={data} options={options} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderAnalysisTable = () => {\r\n    if (!analysisData || analysisData.imageAnalyses.length === 0) return null;\r\n\r\n    return (\r\n      <div className=\"analysis-table-container\">\r\n        <table className=\"analysis-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Webcam Capture</th>\r\n              <th>Game Screenshot</th>\r\n              <th>Analysis</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {analysisData.imageAnalyses.map((analysis, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  <img\r\n                    src={`http://localhost:5000/uploads/webcam_images/${selectedSession}/${analysis.imagePath}`}\r\n                    alt={`Webcam ${index}`}\r\n                    className=\"image-preview\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    src={`http://localhost:5000/uploads/screenshots/${selectedSession}/${analysis.imagePath}`}\r\n                    alt={`Screenshot ${index}`}\r\n                    className=\"image-preview\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  {Object.entries(analysis.emotions).map(([emotion, value]) => (\r\n                    <div key={emotion}>\r\n                      {emotion}: {parseFloat(value).toFixed(2)}%\r\n                    </div>\r\n                  ))}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <h2>Admin Dashboard</h2>\r\n      {selectedSession ? (\r\n        <>\r\n          {renderPieChart()}\r\n          {renderAnalysisTable()}\r\n          <button\r\n            onClick={handleBackToSessions}\r\n            className=\"back-btn\"\r\n          >\r\n            Back to Sessions\r\n          </button>\r\n        </>\r\n      ) : (\r\n        renderSessionsTable()\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminApp;\r\n"],"mappingslD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,eAAe;AACtB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdc,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;MAClE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;MAElC;MACA,MAAMC,eAAe,GAAGF,IAAI,CAACG,GAAG,CAAEC,KAAK,KAAM;QAC3CC,QAAQ,EAAED,KAAK,CAACC,QAAQ;QACxBhB,QAAQ,EAAEe,KAAK,CAACf;MAClB,CAAC,CAAC,CAAC;MAEHC,WAAW,CAACY,eAAe,CAAC;IAC9B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAME,kBAAkB,GAAG,MAAOC,SAAS,IAAK;IAC9CjB,kBAAkB,CAACiB,SAAS,CAAC;IAC7B,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iCAAiCY,SAAS,EAC5C,CAAC;MACD,IAAI,CAACb,QAAQ,CAACE,EAAE,EAAE;QAChB,IAAIF,QAAQ,CAACc,MAAM,KAAK,GAAG,EAAE;UAC3BhB,eAAe,CAAC;YACdiB,aAAa,EAAE,EAAE;YACjBC,eAAe,EAAE;cAAEC,QAAQ,EAAE,CAAC;YAAE;UAClC,CAAC,CAAC;QACJ,CAAC,MAAM;UACL,MAAM,IAAId,KAAK,CAAC,6BAA6B,CAAC;QAChD;MACF;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCP,eAAe,CAACM,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAMQ,oBAAoB,GAAGA,CAAA,KAAM;IACjCtB,kBAAkB,CAAC,IAAI,CAAC;IACxBE,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMqB,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;IAC1B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACE,cAAc,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,kBAC1BpC,OAAA;IAAKqC,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvCtC,OAAA;MAAAsC,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3B1C,OAAA;MAAOqC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC/BtC,OAAA;QAAAsC,QAAA,eACEtC,OAAA;UAAAsC,QAAA,gBACEtC,OAAA;YAAAsC,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjB1C,OAAA;YAAAsC,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnB1C,OAAA;YAAAsC,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnB1C,OAAA;YAAAsC,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR1C,OAAA;QAAAsC,QAAA,EACGjC,QAAQ,CAACc,GAAG,CAAEC,KAAK,IAClBA,KAAK,CAACf,QAAQ,CAACc,GAAG,CAAC,CAACwB,OAAO,EAAEC,KAAK,kBAChC5C,OAAA;UAAAsC,QAAA,GACGM,KAAK,KAAK,CAAC,iBACV5C,OAAA;YAAI6C,OAAO,EAAEzB,KAAK,CAACf,QAAQ,CAACyC,MAAO;YAAAR,QAAA,EAAElB,KAAK,CAACC;UAAQ;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CACzD,eACD1C,OAAA;YAAAsC,QAAA,EAAKK,OAAO,CAAClB;UAAS;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5B1C,OAAA;YAAAsC,QAAA,EAAKP,UAAU,CAACY,OAAO,CAACI,SAAS;UAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxC1C,OAAA;YAAAsC,QAAA,eACEtC,OAAA;cACEgD,OAAO,EAAEA,CAAA,KAAMxB,kBAAkB,CAACmB,OAAO,CAAClB,SAAS,CAAE;cACrDY,SAAS,EAAC,YAAY;cAAAC,QAAA,EACvB;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA,GAbEC,OAAO,CAAClB,SAAS;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OActB,CACL,CACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CACN;EAED,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC3B,IACE,CAACxC,YAAY,IACb,CAACA,YAAY,CAACmB,eAAe,IAC7BsB,MAAM,CAACC,IAAI,CAAC1C,YAAY,CAACmB,eAAe,CAACC,QAAQ,CAAC,CAACiB,MAAM,KAAK,CAAC,EAE/D,OAAO,IAAI;IAEb,MAAMjB,QAAQ,GAAGpB,YAAY,CAACmB,eAAe,CAACC,QAAQ;IACtD,MAAMuB,uBAAuB,GAAG;MAC9BC,KAAK,EAAE,UAAU;MACjBC,GAAG,EAAE,QAAQ;MACbC,KAAK,EAAE,UAAU;MACjBC,SAAS,EAAE,cAAc;MACzBC,OAAO,EAAE,YAAY;MACrBC,OAAO,EAAE;IACX,CAAC;IAED,MAAM1C,IAAI,GAAG;MACX2C,MAAM,EAAET,MAAM,CAACC,IAAI,CAACtB,QAAQ,CAAC,CAACV,GAAG,CAC9ByC,OAAO,IAAKR,uBAAuB,CAACQ,OAAO,CAAC,IAAIA,OACnD,CAAC;MACDC,QAAQ,EAAE,CACR;QACE7C,IAAI,EAAEkC,MAAM,CAACY,MAAM,CAACjC,QAAQ,CAAC,CAACV,GAAG,CAAE4C,CAAC,IAAKC,UAAU,CAACD,CAAC,CAAC,CAAC;QACvDE,eAAe,EAAE,CACf,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;MAEb,CAAC;IAEL,CAAC;IAED,MAAMC,OAAO,GAAG;MACdC,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,QAAQ,EAAE;QACZ;MACF;IACF,CAAC;IAED,oBACEtE,OAAA;MAAKqC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BtC,OAAA,CAACF,GAAG;QAACkB,IAAI,EAAEA,IAAK;QAACkD,OAAO,EAAEA;MAAQ;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAEV,CAAC;EAED,MAAM6B,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAI,CAAC9D,YAAY,IAAIA,YAAY,CAACkB,aAAa,CAACmB,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IAEzE,oBACE9C,OAAA;MAAKqC,SAAS,EAAC,0BAA0B;MAAAC,QAAA,eACvCtC,OAAA;QAAOqC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC/BtC,OAAA;UAAAsC,QAAA,eACEtC,OAAA;YAAAsC,QAAA,gBACEtC,OAAA;cAAAsC,QAAA,EAAI;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvB1C,OAAA;cAAAsC,QAAA,EAAI;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxB1C,OAAA;cAAAsC,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACR1C,OAAA;UAAAsC,QAAA,EACG7B,YAAY,CAACkB,aAAa,CAACR,GAAG,CAAC,CAACqD,QAAQ,EAAE5B,KAAK,kBAC9C5C,OAAA;YAAAsC,QAAA,gBACEtC,OAAA;cAAAsC,QAAA,eACEtC,OAAA;gBACEyE,GAAG,EAAE,+CAA+ClE,eAAe,IAAIiE,QAAQ,CAACE,SAAS,EAAG;gBAC5FC,GAAG,EAAE,UAAU/B,KAAK,EAAG;gBACvBP,SAAS,EAAC;cAAe;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACL1C,OAAA;cAAAsC,QAAA,eACEtC,OAAA;gBACEyE,GAAG,EAAE,6CAA6ClE,eAAe,IAAIiE,QAAQ,CAACE,SAAS,EAAG;gBAC1FC,GAAG,EAAE,cAAc/B,KAAK,EAAG;gBAC3BP,SAAS,EAAC;cAAe;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACL1C,OAAA;cAAAsC,QAAA,EACGY,MAAM,CAAC0B,OAAO,CAACJ,QAAQ,CAAC3C,QAAQ,CAAC,CAACV,GAAG,CAAC,CAAC,CAACyC,OAAO,EAAEiB,KAAK,CAAC,kBACtD7E,OAAA;gBAAAsC,QAAA,GACGsB,OAAO,EAAC,IAAE,EAACI,UAAU,CAACa,KAAK,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,GAC3C;cAAA,GAFUlB,OAAO;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEZ,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA,GArBEE,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsBV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEV,CAAC;EAED,oBACE1C,OAAA;IAAKqC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BtC,OAAA;MAAAsC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBnC,eAAe,gBACdP,OAAA,CAAAE,SAAA;MAAAoC,QAAA,GACGW,cAAc,CAAC,CAAC,EAChBsB,mBAAmB,CAAC,CAAC,eACtBvE,OAAA;QACEgD,OAAO,EAAElB,oBAAqB;QAC9BO,SAAS,EAAC,UAAU;QAAAC,QAAA,EACrB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CAAC,GAEHN,mBAAmB,CAAC,CACrB;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtC,EAAA,CAzNQD,QAAQ;AAAA4E,EAAA,GAAR5E,QAAQ;AA2NjB,eAAeA,QAAQ;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}